[[plugins]]
repo = 'Shougo/unite.vim'
on_cmd = ['Unite']

[[plugins]]
repo = 'dff9th/nerdtree'
on_cmd = ['NERDTreeToggle']
hook_add = '''
    nnoremap <silent><C-n> :NERDTreeToggle<CR>
'''

[[plugins]]
repo = 'itchyny/lightline.vim'
hook_add = '''
    let g:lightline = {
    \   'active': {
    \       'left': [
    \           [ 'mode', 'paste' ],
    \           [ 'readonly', 'filename', 'modified' ],
    \           [ 'linter_checking', 'linter_errors', 'linter_warnings', 'linter_ok' ]
    \       ],
    \   },
    \   'component_function': {
    \       'filename': 'LightlineFilename'
    \   }
    \}
    " Draw filename with relative path
    function! LightlineFilename()
        let root = fnamemodify(get(b:, 'git_dir'), ':h')
        let path = expand('%:p')
        if path[:len(root)-1] ==# root
        return path[len(root)+1:]
        endif
        return expand('%')
    endfunction
'''

# Add ale info at lightline
[[plugins]]
repo = 'maximbaz/lightline-ale'
depends = ['lightline.vim', 'ale']
hook_add = '''
    let g:lightline.component_expand = {
    \   'linter_checking': 'lightline#ale#checking',
    \   'linter_warnings': 'lightline#ale#warnings',
    \   'linter_errors': 'lightline#ale#errors',
    \   'linter_ok': 'lightline#ale#ok',
    \}
    let g:lightline.component_type = {
    \   'linter_checking': 'left',
    \   'linter_warnings': 'warning',
    \   'linter_errors': 'error',
    \   'linter_ok': 'left',
    \}
'''

# Align lines by the word position
[[plugins]]
repo = 'h1mesuke/vim-alignta'
on_cmd = ['Alignta']
hook_add = '''
    vnoremap \| :Alignta \|<CR>
    vnoremap // :Alignta <- //<CR>
    "vnoremap {  :Alignta {<CR>
    vnoremap \= :Alignta =<CR>
    vnoremap \\ :Alignta <- \\<CR>
'''

[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_i = 1
hook_add = """
    set completeopt-=preview
"""

[[plugins]]
repo = 'roxma/nvim-yarp'
if = "!has('nvim')"

[[plugins]]
repo = 'roxma/vim-hug-neovim-rpc'
if = "!has('nvim')"

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
    let g:ale_lint_on_text_changed = 'always'
    let g:ale_lint_on_enter = 0
    let g:ale_linters = {
    \   'c' : ['gcc'],
    \   'cpp' : ['gcc'],
    \   'python': ['pylint'],
    \   'javascript': ['eslint']
    \}
    let g:ale_c_gcc_options = '-I./include -Wall'
    let g:ale_cpp_gcc_options = '-std=c++11 -I./include -Wall'

    " Clear linter display
    nnoremap <C-k> :ALEReset<CR>
'''

# Auto set paste at paste
[[plugins]]
repo = 'ConradIrwin/vim-bracketed-paste'
on_i = 1

[[plugins]]
repo = 'tomasr/molokai'
hook_add = '''
    autocmd ColorScheme * highlight Comment ctermfg=28  guifg=#008800
    autocmd ColorScheme * highlight LineNr  ctermfg=136 guifg=#d9a62e
    colorscheme molokai
'''

[[plugins]]
repo = 'kana/vim-operator-user'

[[plugins]]
repo = 'embear/vim-localvimrc'
hook_add = '''
    let g:localvimrc_sandbox = 0
    let g:localvimrc_ask = 0
'''
